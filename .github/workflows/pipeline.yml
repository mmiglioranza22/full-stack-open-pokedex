name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  check_skip_job:
    runs-on: ubuntu-20.04
     # Map a step output to a job output
    outputs:
      output1: ${{ steps.checkSkip.outputs.shouldSkip }}
    steps:
      - name: "check for #skip in commit"
        id: checkSkip
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
          SKIP_WORKFLOW: ${{ contains(toJson(github.event.commits.*.message), '#skip') }}          
        run: echo "shouldSkip=$SKIP_WORKFLOW" >> "$GITHUB_OUTPUT"
  
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    needs: check_skip_job
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: npm ci
        run: npm ci
      - name: lint
        run: npm run eslint
      - name: build
        run: npm run build
      - name: Discord notification - Build failure
        uses: rjstone/discord-webhook-notify@v1.0.4
        env:
          AUTHOR: ${{ toJson(github.event.commits.*.author.username) }}
          COMMIT_URL: ${{ toJson(github.event.commits.*.url) }}
        if: failure()
        with:
          severity: error
          username: ${{ env.AUTHOR }}
          text: Build failure 
          details: Commit - ${{ env.COMMIT_URL }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: test
        run: npm run test
      - name: setup e2e:Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - name: check output
        env:
          OUTPUT1: ${{needs.check_skip_job.outputs.output1}}
        run: echo "ouput - $OUTPUT1"
      - name: Render Deployment
        uses: sws2apps/render-deployment@v1.7.0
        if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip')}} 
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false
      - name: Discord notification - job cancelled
        uses: rjstone/discord-webhook-notify@v1.0.4
        env: 
          AUTHOR: ${{ toJson(github.event.commits.*.author.username) }}
          COMMIT_URL: ${{ toJson(github.event.commits.*.url) }}
        if: cancelled()
        with:
          severity: warn
          username: ${{ env.AUTHOR }}
          text: Job cancelled
          details: Commit - ${{ env.COMMIT_URL }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
        
  tag_release:
    if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}  
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: semver tag release
        uses: anothrNick/github-tag-action@777684df761b882a3f4f70db16ac70d8cc78d0ea
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          WITH_V: true
          PRERELEASE: true
          DEFAULT_BUMP: 'patch'