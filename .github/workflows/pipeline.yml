name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  check_skip_job:
    runs-on:
      ubuntu-20.04
      # Map a step output to a job output
    outputs:
      output1: ${{ steps.checkSkip.outputs.shouldSkip }}
    steps:
      - name: "check for #skip in commit"
        id: checkSkip
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
          SKIP_WORKFLOW: ${{ contains(toJson(github.event.commits.*.message), '#skip') }}
        run: echo "shouldSkip=$SKIP_WORKFLOW" >> "$GITHUB_OUTPUT"

  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    needs: check_skip_job
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: "0"
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: npm ci
        run: npm ci
      - name: lint
        run: npm run eslint
      - name: build
        id: buildStep
        run: npm run build
      - name: Discord notification
        if: ${{ failure() && steps.buildStep.outcome == 'failure'}}
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: MrRoboto
          DISCORD_EMBEDS: >
            '[
              {
                "author":{ 
                  "icon_url":"https://avatars.githubusercontent.com/${{ github.actor }}",
                  "name":"${{ github.actor }}",
                  "url":"https://github.com/${{github.actor}}"
                },
                "url":"https://github.com/${{github.repository}}/commit/${{github.sha}}",
                "fields":[
                  {
                    "name":"Repository",
                    "value":"[${{github.event.repository.name}}](${{github.event.repository.clone_url}})",
                    "inline":true
                  },
                  {
                    "name":"Branch",
                    "value":"[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})",
                    "inline":true
                  },
                  {
                    "name":"Event","value":"${{github.event_name}}",
                    "inline":true},{"name":"Job","value":"${{github.job}}",
                    "inline":true
                  },
                  {
                    "name":"Commit Message",
                    "value":"[${{ github.sha }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`"
                  },
                  {
                    "name":"Changed Files",
                    "value":"${{ steps.changed-files.outputs.all_changed_files }}"
                  },
                  {
                    "name":"Author",
                    "value":"[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})"
                  }
                ],
                "color":1127128,
                "timestamp":"${{github.event.head_commit.timestamp}}",
                "footer":{
                  "text":"${{github.event.head_commit.timestamp}}"
                }
              }
            ]'
        with:
          args: "Build ${{github.run_number}} has ${{ steps.buildStep.outcome == 'success' && 'passed!' || 'failed.' }}"
      - name: test
        run: npm run test
      - name: setup e2e:Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - name: check output
        env:
          OUTPUT1: ${{needs.check_skip_job.outputs.output1}}
        run: echo "ouput - $OUTPUT1"
      - name: Render Deployment
        uses: sws2apps/render-deployment@v1.7.0
        if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip')}}
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false

  tag_release:
    if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: "0"
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: semver tag release
        id: tagRelease
        uses: anothrNick/github-tag-action@777684df761b882a3f4f70db16ac70d8cc78d0ea
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          DEFAULT_BUMP: "patch"
      - name: Discord notification
        uses: Ilshidur/action-discord@0.3.2
        if: ${{ steps.tagRelease.outcome == 'success'}}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: MrRoboto
          DISCORD_EMBEDS: >
            '[
               {
                 "author":{ 
                   "icon_url":"https://avatars.githubusercontent.com/${{ github.actor }}",
                   "name":"${{ github.actor }}",
                   "url":"https://github.com/${{github.actor}}"
                 },
                 "url":"https://github.com/${{github.repository}}/commit/${{github.sha}}",
                 "fields":[
                   {
                     "name":"Repository",
                     "value":"[${{github.event.repository.name}}](${{github.event.repository.clone_url}})",
                     "inline":true
                   },
                   {
                     "name":"Branch",
                     "value":"[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})",
                     "inline":true
                   },
                   {
                     "name":"Event","value":"${{github.event_name}}",
                     "inline":true},{"name":"Job","value":"${{github.job}}",
                     "inline":true
                   },
                   {
                     "name":"Commit Message",
                     "value":"[${{ github.sha }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`"
                   },
                   {
                     "name":"Changed Files",
                     "value":"${{ steps.changed-files.outputs.all_changed_files }}"
                   },
                   {
                     "name":"Author",
                     "value":"[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})"
                   }
                 ],
                 "color":1127128,
                 "timestamp":"${{github.event.head_commit.timestamp}}",
                 "footer":{
                   "text":"${{github.event.head_commit.timestamp}}"
                 }
               }
             ]'
        with:
          args: "New version was deployed"
